CC = gcc
LD = gcc
CFLAGS = -D_FILE_OFFSET_BITS=64 -O -fPIC -I${IDL_DIR}/external
LDFLAGS = -shared

CP = cp -f
RM = rm -f

SOFILES = ascii_write.so ascii_read.so binary_read.so
OBJFILES = ascii_write.o ascii_read.o binary_read.o fileio_util.o vectors.o
DLMS = ascii_write.dlm ascii_read.dlm binary_read.dlm

all: ${SOFILES} ${DLM}
	${CP} ${SOFILES} ../DLM
	${CP} ${DLMS} ../DLM

clean:
	- ${RM} ${SOFILES} ${OBJFILES}
	- cd ../DLM; ${RM} ${SOFILES} ${DLMS}

ascii_write.so: ascii_write.o fileio_util.o vectors.o
	@ echo linking $@
	${LD} ${LDFLAGS} ${LDLIBS} -o $@ ascii_write.o fileio_util.o vectors.o
ascii_read.so: ascii_read.o fileio_util.o vectors.o
	@ echo linking $@
	${LD} ${LDFLAGS} ${LDLIBS} -o $@ ascii_read.o fileio_util.o vectors.o

binary_read.so: binary_read.o fileio_util.o vectors.o
	@ echo linking $@
	${LD} ${LDFLAGS} ${LDLIBS} -o $@ binary_read.o fileio_util.o vectors.o


ascii_write.o: ascii_write.c ascii_write.h
ascii_read.o: ascii_read.c ascii_read.h
binary_read.o: binary_read.c binary_read.h
fileio_util.o: fileio_util.c fileio_util.h
vectors.o: vectors.c vectors.h
